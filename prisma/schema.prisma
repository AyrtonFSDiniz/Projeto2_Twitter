// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seguidores {
  id            Int       @default(autoincrement()) @id
  idSeguidor    Int
  usuarios Usuario @relation(fields: [usuarioId], references: [id]) 
  usuarioId      Int
}

model Seguindo {
  id Int @default(autoincrement()) @id
  idSeguindo Int
  usuarios Usuario @relation(fields: [usuarioId], references: [id]) 
  usuarioId      Int
}

model Tweet {
  id            Int       @default(autoincrement()) @id
  texto         String
  emoji         String
  curtidas      Int
  data_postagem String
  usuarios Usuario @relation(fields: [usuarioId], references: [id]) 
  usuarioId      Int
  categoria CategoriaOnTweet[]
  favoritosOnUsuario FavoritosOnUsuario[]
}

model Usuario {
  id Int @default(autoincrement()) @id
  nome String
  imagem String?
  bio String
  nascimento String
  seguidores Seguidores []
  seguindo Seguindo []
  criado_em DateTime @default(now())
  modificado_em DateTime @updatedAt
  tweets Tweet []
  email String
  senha String
  favoritosOnUsuario FavoritosOnUsuario[]
}

model Categoria {
  id Int @default(autoincrement()) @id
  nome String
  criado_em DateTime @default(now())
  tweet CategoriaOnTweet[]
}

model CategoriaOnTweet {
  id Int @default(autoincrement()) @id
  categoria Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  tweets Tweet @relation(fields: [tweetId], references: [id])
  tweetId Int
}

model FavoritosOnUsuario {
  id Int @default(autoincrement()) @id
  tweets Tweet @relation(fields: [tweetId], references: [id])
  tweetId Int
  usuarios Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int
}

